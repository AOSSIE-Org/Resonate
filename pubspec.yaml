name: resonate
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.2.4 <4.0.0'
  

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  animated_bottom_navigation_bar: ^1.2.0
  animated_splash_screen: ^1.3.0
  app_links: ^6.4.0
  appwrite: ^14.0.0
  audioplayers: ^6.4.0
  audiotags: ^1.4.3
  cached_network_image: ^3.3.1
  circular_countdown_timer: ^0.2.3
  cupertino_icons: ^1.0.2
  custom_refresh_indicator: ^4.0.1
  file_picker: ^9.0.1
  firebase_analytics: ^11.4.3
  firebase_core: ^3.12.0
  firebase_messaging: ^15.2.3
  flutter:
    sdk: flutter
  flutter_local_notifications: ^18.0.0
  flutter_native_splash: ^2.2.19
  flutter_onboarding_slider: ^1.0.10
  flutter_otp_text_field: ^1.1.1
  flutter_secure_storage: ^9.2.4
  flutter_speed_dial: ^7.0.0
  flutter_svg: ^2.0.7
  focused_menu: ^1.0.5
  font_awesome_flutter: ^10.4.0
  freezed_annotation: ^2.4.4
  get: ^4.6.5
  get_storage: ^2.1.1
  google_fonts: ^6.2.1
  http: ^1.3.0
  image_cropper: ^9.0.0
  image_picker: ^1.1.2
  internet_connection_checker_plus: ^2.7.0
  intl: ^0.20.2
  json_annotation: ^4.8.1
  language_picker: ^0.4.3
  livekit_client: ^2.3.1+hotfix.1
  loading_animation_widget: ^1.2.0+4
  loading_indicator: ^3.1.1
  package_info_plus: ^8.0.2
  page_transition: ^2.0.9
  palette_generator: ^0.3.3+4
  persistent_bottom_nav_bar: ^6.2.1
  random_string: ^2.3.1
  share_plus: ^10.1.4
  shimmer: ^3.0.0
  simple_progress_indicators: ^0.2.0
  stop_watch_timer: ^3.0.1
  textfield_tags:
    git:
      url: https://github.com/lionelmennig/textfield_tags.git
      ref: fixes/allow-controller-re-registration
  flutter_lyric:
    git:
      url: https://github.com/Aarush-Acharya/flutter_lyric.git
      ref: master
  url_launcher: ^6.1.12
  uuid: ^4.5.1

dependency_overrides: 
  flutter_web_auth_2: ^4.1.0

dev_dependencies:
  build_runner: ^2.3.3
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0
  flutter_test:
    sdk: flutter
  freezed: ^2.3.3
  json_serializable: ^6.6.2

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/svg/
    - assets/mock/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware
  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages
  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Montserrat
      fonts:
        - asset: assets/fonts/Montserrat-Regular.ttf
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
