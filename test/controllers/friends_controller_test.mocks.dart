// Mocks generated by Mockito 5.4.6 from annotations
// in resonate/test/controllers/friends_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:appwrite/appwrite.dart' as _i8;
import 'package:appwrite/enums.dart' as _i10;
import 'package:appwrite/models.dart' as _i3;
import 'package:appwrite/src/client.dart' as _i2;
import 'package:appwrite/src/enums.dart' as _i13;
import 'package:appwrite/src/realtime.dart' as _i15;
import 'package:appwrite/src/realtime_subscription.dart' as _i7;
import 'package:appwrite/src/response.dart' as _i4;
import 'package:appwrite/src/upload_progress.dart' as _i12;
import 'package:firebase_core/firebase_core.dart' as _i5;
import 'package:firebase_messaging/firebase_messaging.dart' as _i14;
import 'package:firebase_messaging_platform_interface/firebase_messaging_platform_interface.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDocumentList_1 extends _i1.SmartFake implements _i3.DocumentList {
  _FakeDocumentList_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDocument_2 extends _i1.SmartFake implements _i3.Document {
  _FakeDocument_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_3 extends _i1.SmartFake implements _i3.User {
  _FakeUser_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdentityList_4 extends _i1.SmartFake implements _i3.IdentityList {
  _FakeIdentityList_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJwt_5 extends _i1.SmartFake implements _i3.Jwt {
  _FakeJwt_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLogList_6 extends _i1.SmartFake implements _i3.LogList {
  _FakeLogList_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMfaType_7 extends _i1.SmartFake implements _i3.MfaType {
  _FakeMfaType_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMfaChallenge_8 extends _i1.SmartFake implements _i3.MfaChallenge {
  _FakeMfaChallenge_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSession_9 extends _i1.SmartFake implements _i3.Session {
  _FakeSession_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMfaFactors_10 extends _i1.SmartFake implements _i3.MfaFactors {
  _FakeMfaFactors_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMfaRecoveryCodes_11 extends _i1.SmartFake
    implements _i3.MfaRecoveryCodes {
  _FakeMfaRecoveryCodes_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePreferences_12 extends _i1.SmartFake implements _i3.Preferences {
  _FakePreferences_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeToken_13 extends _i1.SmartFake implements _i3.Token {
  _FakeToken_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSessionList_14 extends _i1.SmartFake implements _i3.SessionList {
  _FakeSessionList_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTarget_15 extends _i1.SmartFake implements _i3.Target {
  _FakeTarget_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_16<T> extends _i1.SmartFake implements _i4.Response<T> {
  _FakeResponse_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseApp_17 extends _i1.SmartFake implements _i5.FirebaseApp {
  _FakeFirebaseApp_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeNotificationSettings_18 extends _i1.SmartFake
    implements _i6.NotificationSettings {
  _FakeNotificationSettings_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeExecutionList_19 extends _i1.SmartFake implements _i3.ExecutionList {
  _FakeExecutionList_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeExecution_20 extends _i1.SmartFake implements _i3.Execution {
  _FakeExecution_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRealtimeSubscription_21 extends _i1.SmartFake
    implements _i7.RealtimeSubscription {
  _FakeRealtimeSubscription_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Databases].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabases extends _i1.Mock implements _i8.Databases {
  MockDatabases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeClient_0(this, Invocation.getter(#client)),
          )
          as _i2.Client);

  @override
  _i9.Future<_i3.DocumentList> listDocuments({
    required String? databaseId,
    required String? collectionId,
    List<String>? queries,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#listDocuments, [], {
              #databaseId: databaseId,
              #collectionId: collectionId,
              #queries: queries,
            }),
            returnValue: _i9.Future<_i3.DocumentList>.value(
              _FakeDocumentList_1(
                this,
                Invocation.method(#listDocuments, [], {
                  #databaseId: databaseId,
                  #collectionId: collectionId,
                  #queries: queries,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.DocumentList>);

  @override
  _i9.Future<_i3.Document> createDocument({
    required String? databaseId,
    required String? collectionId,
    required String? documentId,
    required Map<dynamic, dynamic>? data,
    List<String>? permissions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createDocument, [], {
              #databaseId: databaseId,
              #collectionId: collectionId,
              #documentId: documentId,
              #data: data,
              #permissions: permissions,
            }),
            returnValue: _i9.Future<_i3.Document>.value(
              _FakeDocument_2(
                this,
                Invocation.method(#createDocument, [], {
                  #databaseId: databaseId,
                  #collectionId: collectionId,
                  #documentId: documentId,
                  #data: data,
                  #permissions: permissions,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Document>);

  @override
  _i9.Future<_i3.Document> getDocument({
    required String? databaseId,
    required String? collectionId,
    required String? documentId,
    List<String>? queries,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getDocument, [], {
              #databaseId: databaseId,
              #collectionId: collectionId,
              #documentId: documentId,
              #queries: queries,
            }),
            returnValue: _i9.Future<_i3.Document>.value(
              _FakeDocument_2(
                this,
                Invocation.method(#getDocument, [], {
                  #databaseId: databaseId,
                  #collectionId: collectionId,
                  #documentId: documentId,
                  #queries: queries,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Document>);

  @override
  _i9.Future<_i3.Document> upsertDocument({
    required String? databaseId,
    required String? collectionId,
    required String? documentId,
    required Map<dynamic, dynamic>? data,
    List<String>? permissions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#upsertDocument, [], {
              #databaseId: databaseId,
              #collectionId: collectionId,
              #documentId: documentId,
              #data: data,
              #permissions: permissions,
            }),
            returnValue: _i9.Future<_i3.Document>.value(
              _FakeDocument_2(
                this,
                Invocation.method(#upsertDocument, [], {
                  #databaseId: databaseId,
                  #collectionId: collectionId,
                  #documentId: documentId,
                  #data: data,
                  #permissions: permissions,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Document>);

  @override
  _i9.Future<_i3.Document> updateDocument({
    required String? databaseId,
    required String? collectionId,
    required String? documentId,
    Map<dynamic, dynamic>? data,
    List<String>? permissions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateDocument, [], {
              #databaseId: databaseId,
              #collectionId: collectionId,
              #documentId: documentId,
              #data: data,
              #permissions: permissions,
            }),
            returnValue: _i9.Future<_i3.Document>.value(
              _FakeDocument_2(
                this,
                Invocation.method(#updateDocument, [], {
                  #databaseId: databaseId,
                  #collectionId: collectionId,
                  #documentId: documentId,
                  #data: data,
                  #permissions: permissions,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Document>);

  @override
  _i9.Future<dynamic> deleteDocument({
    required String? databaseId,
    required String? collectionId,
    required String? documentId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteDocument, [], {
              #databaseId: databaseId,
              #collectionId: collectionId,
              #documentId: documentId,
            }),
            returnValue: _i9.Future<dynamic>.value(),
          )
          as _i9.Future<dynamic>);
}

/// A class which mocks [Account].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccount extends _i1.Mock implements _i8.Account {
  MockAccount() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeClient_0(this, Invocation.getter(#client)),
          )
          as _i2.Client);

  @override
  _i9.Future<_i3.User> get() =>
      (super.noSuchMethod(
            Invocation.method(#get, []),
            returnValue: _i9.Future<_i3.User>.value(
              _FakeUser_3(this, Invocation.method(#get, [])),
            ),
          )
          as _i9.Future<_i3.User>);

  @override
  _i9.Future<_i3.User> create({
    required String? userId,
    required String? email,
    required String? password,
    String? name,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#create, [], {
              #userId: userId,
              #email: email,
              #password: password,
              #name: name,
            }),
            returnValue: _i9.Future<_i3.User>.value(
              _FakeUser_3(
                this,
                Invocation.method(#create, [], {
                  #userId: userId,
                  #email: email,
                  #password: password,
                  #name: name,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.User>);

  @override
  _i9.Future<_i3.User> updateEmail({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateEmail, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i9.Future<_i3.User>.value(
              _FakeUser_3(
                this,
                Invocation.method(#updateEmail, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.User>);

  @override
  _i9.Future<_i3.IdentityList> listIdentities({List<String>? queries}) =>
      (super.noSuchMethod(
            Invocation.method(#listIdentities, [], {#queries: queries}),
            returnValue: _i9.Future<_i3.IdentityList>.value(
              _FakeIdentityList_4(
                this,
                Invocation.method(#listIdentities, [], {#queries: queries}),
              ),
            ),
          )
          as _i9.Future<_i3.IdentityList>);

  @override
  _i9.Future<dynamic> deleteIdentity({required String? identityId}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteIdentity, [], {#identityId: identityId}),
            returnValue: _i9.Future<dynamic>.value(),
          )
          as _i9.Future<dynamic>);

  @override
  _i9.Future<_i3.Jwt> createJWT() =>
      (super.noSuchMethod(
            Invocation.method(#createJWT, []),
            returnValue: _i9.Future<_i3.Jwt>.value(
              _FakeJwt_5(this, Invocation.method(#createJWT, [])),
            ),
          )
          as _i9.Future<_i3.Jwt>);

  @override
  _i9.Future<_i3.LogList> listLogs({List<String>? queries}) =>
      (super.noSuchMethod(
            Invocation.method(#listLogs, [], {#queries: queries}),
            returnValue: _i9.Future<_i3.LogList>.value(
              _FakeLogList_6(
                this,
                Invocation.method(#listLogs, [], {#queries: queries}),
              ),
            ),
          )
          as _i9.Future<_i3.LogList>);

  @override
  _i9.Future<_i3.User> updateMFA({required bool? mfa}) =>
      (super.noSuchMethod(
            Invocation.method(#updateMFA, [], {#mfa: mfa}),
            returnValue: _i9.Future<_i3.User>.value(
              _FakeUser_3(this, Invocation.method(#updateMFA, [], {#mfa: mfa})),
            ),
          )
          as _i9.Future<_i3.User>);

  @override
  _i9.Future<_i3.MfaType> createMfaAuthenticator({
    required _i10.AuthenticatorType? type,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createMfaAuthenticator, [], {#type: type}),
            returnValue: _i9.Future<_i3.MfaType>.value(
              _FakeMfaType_7(
                this,
                Invocation.method(#createMfaAuthenticator, [], {#type: type}),
              ),
            ),
          )
          as _i9.Future<_i3.MfaType>);

  @override
  _i9.Future<_i3.User> updateMfaAuthenticator({
    required _i10.AuthenticatorType? type,
    required String? otp,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateMfaAuthenticator, [], {
              #type: type,
              #otp: otp,
            }),
            returnValue: _i9.Future<_i3.User>.value(
              _FakeUser_3(
                this,
                Invocation.method(#updateMfaAuthenticator, [], {
                  #type: type,
                  #otp: otp,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.User>);

  @override
  _i9.Future<dynamic> deleteMfaAuthenticator({
    required _i10.AuthenticatorType? type,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteMfaAuthenticator, [], {#type: type}),
            returnValue: _i9.Future<dynamic>.value(),
          )
          as _i9.Future<dynamic>);

  @override
  _i9.Future<_i3.MfaChallenge> createMfaChallenge({
    required _i10.AuthenticationFactor? factor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createMfaChallenge, [], {#factor: factor}),
            returnValue: _i9.Future<_i3.MfaChallenge>.value(
              _FakeMfaChallenge_8(
                this,
                Invocation.method(#createMfaChallenge, [], {#factor: factor}),
              ),
            ),
          )
          as _i9.Future<_i3.MfaChallenge>);

  @override
  _i9.Future<_i3.Session> updateMfaChallenge({
    required String? challengeId,
    required String? otp,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateMfaChallenge, [], {
              #challengeId: challengeId,
              #otp: otp,
            }),
            returnValue: _i9.Future<_i3.Session>.value(
              _FakeSession_9(
                this,
                Invocation.method(#updateMfaChallenge, [], {
                  #challengeId: challengeId,
                  #otp: otp,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Session>);

  @override
  _i9.Future<_i3.MfaFactors> listMfaFactors() =>
      (super.noSuchMethod(
            Invocation.method(#listMfaFactors, []),
            returnValue: _i9.Future<_i3.MfaFactors>.value(
              _FakeMfaFactors_10(this, Invocation.method(#listMfaFactors, [])),
            ),
          )
          as _i9.Future<_i3.MfaFactors>);

  @override
  _i9.Future<_i3.MfaRecoveryCodes> getMfaRecoveryCodes() =>
      (super.noSuchMethod(
            Invocation.method(#getMfaRecoveryCodes, []),
            returnValue: _i9.Future<_i3.MfaRecoveryCodes>.value(
              _FakeMfaRecoveryCodes_11(
                this,
                Invocation.method(#getMfaRecoveryCodes, []),
              ),
            ),
          )
          as _i9.Future<_i3.MfaRecoveryCodes>);

  @override
  _i9.Future<_i3.MfaRecoveryCodes> createMfaRecoveryCodes() =>
      (super.noSuchMethod(
            Invocation.method(#createMfaRecoveryCodes, []),
            returnValue: _i9.Future<_i3.MfaRecoveryCodes>.value(
              _FakeMfaRecoveryCodes_11(
                this,
                Invocation.method(#createMfaRecoveryCodes, []),
              ),
            ),
          )
          as _i9.Future<_i3.MfaRecoveryCodes>);

  @override
  _i9.Future<_i3.MfaRecoveryCodes> updateMfaRecoveryCodes() =>
      (super.noSuchMethod(
            Invocation.method(#updateMfaRecoveryCodes, []),
            returnValue: _i9.Future<_i3.MfaRecoveryCodes>.value(
              _FakeMfaRecoveryCodes_11(
                this,
                Invocation.method(#updateMfaRecoveryCodes, []),
              ),
            ),
          )
          as _i9.Future<_i3.MfaRecoveryCodes>);

  @override
  _i9.Future<_i3.User> updateName({required String? name}) =>
      (super.noSuchMethod(
            Invocation.method(#updateName, [], {#name: name}),
            returnValue: _i9.Future<_i3.User>.value(
              _FakeUser_3(
                this,
                Invocation.method(#updateName, [], {#name: name}),
              ),
            ),
          )
          as _i9.Future<_i3.User>);

  @override
  _i9.Future<_i3.User> updatePassword({
    required String? password,
    String? oldPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [], {
              #password: password,
              #oldPassword: oldPassword,
            }),
            returnValue: _i9.Future<_i3.User>.value(
              _FakeUser_3(
                this,
                Invocation.method(#updatePassword, [], {
                  #password: password,
                  #oldPassword: oldPassword,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.User>);

  @override
  _i9.Future<_i3.User> updatePhone({
    required String? phone,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhone, [], {
              #phone: phone,
              #password: password,
            }),
            returnValue: _i9.Future<_i3.User>.value(
              _FakeUser_3(
                this,
                Invocation.method(#updatePhone, [], {
                  #phone: phone,
                  #password: password,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.User>);

  @override
  _i9.Future<_i3.Preferences> getPrefs() =>
      (super.noSuchMethod(
            Invocation.method(#getPrefs, []),
            returnValue: _i9.Future<_i3.Preferences>.value(
              _FakePreferences_12(this, Invocation.method(#getPrefs, [])),
            ),
          )
          as _i9.Future<_i3.Preferences>);

  @override
  _i9.Future<_i3.User> updatePrefs({required Map<dynamic, dynamic>? prefs}) =>
      (super.noSuchMethod(
            Invocation.method(#updatePrefs, [], {#prefs: prefs}),
            returnValue: _i9.Future<_i3.User>.value(
              _FakeUser_3(
                this,
                Invocation.method(#updatePrefs, [], {#prefs: prefs}),
              ),
            ),
          )
          as _i9.Future<_i3.User>);

  @override
  _i9.Future<_i3.Token> createRecovery({
    required String? email,
    required String? url,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createRecovery, [], {#email: email, #url: url}),
            returnValue: _i9.Future<_i3.Token>.value(
              _FakeToken_13(
                this,
                Invocation.method(#createRecovery, [], {
                  #email: email,
                  #url: url,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Token>);

  @override
  _i9.Future<_i3.Token> updateRecovery({
    required String? userId,
    required String? secret,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateRecovery, [], {
              #userId: userId,
              #secret: secret,
              #password: password,
            }),
            returnValue: _i9.Future<_i3.Token>.value(
              _FakeToken_13(
                this,
                Invocation.method(#updateRecovery, [], {
                  #userId: userId,
                  #secret: secret,
                  #password: password,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Token>);

  @override
  _i9.Future<_i3.SessionList> listSessions() =>
      (super.noSuchMethod(
            Invocation.method(#listSessions, []),
            returnValue: _i9.Future<_i3.SessionList>.value(
              _FakeSessionList_14(this, Invocation.method(#listSessions, [])),
            ),
          )
          as _i9.Future<_i3.SessionList>);

  @override
  _i9.Future<dynamic> deleteSessions() =>
      (super.noSuchMethod(
            Invocation.method(#deleteSessions, []),
            returnValue: _i9.Future<dynamic>.value(),
          )
          as _i9.Future<dynamic>);

  @override
  _i9.Future<_i3.Session> createAnonymousSession() =>
      (super.noSuchMethod(
            Invocation.method(#createAnonymousSession, []),
            returnValue: _i9.Future<_i3.Session>.value(
              _FakeSession_9(
                this,
                Invocation.method(#createAnonymousSession, []),
              ),
            ),
          )
          as _i9.Future<_i3.Session>);

  @override
  _i9.Future<_i3.Session> createEmailPasswordSession({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createEmailPasswordSession, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i9.Future<_i3.Session>.value(
              _FakeSession_9(
                this,
                Invocation.method(#createEmailPasswordSession, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Session>);

  @override
  _i9.Future<_i3.Session> updateMagicURLSession({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateMagicURLSession, [], {
              #userId: userId,
              #secret: secret,
            }),
            returnValue: _i9.Future<_i3.Session>.value(
              _FakeSession_9(
                this,
                Invocation.method(#updateMagicURLSession, [], {
                  #userId: userId,
                  #secret: secret,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Session>);

  @override
  _i9.Future<dynamic> createOAuth2Session({
    required _i10.OAuthProvider? provider,
    String? success,
    String? failure,
    List<String>? scopes,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createOAuth2Session, [], {
              #provider: provider,
              #success: success,
              #failure: failure,
              #scopes: scopes,
            }),
            returnValue: _i9.Future<dynamic>.value(),
          )
          as _i9.Future<dynamic>);

  @override
  _i9.Future<_i3.Session> updatePhoneSession({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneSession, [], {
              #userId: userId,
              #secret: secret,
            }),
            returnValue: _i9.Future<_i3.Session>.value(
              _FakeSession_9(
                this,
                Invocation.method(#updatePhoneSession, [], {
                  #userId: userId,
                  #secret: secret,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Session>);

  @override
  _i9.Future<_i3.Session> createSession({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createSession, [], {
              #userId: userId,
              #secret: secret,
            }),
            returnValue: _i9.Future<_i3.Session>.value(
              _FakeSession_9(
                this,
                Invocation.method(#createSession, [], {
                  #userId: userId,
                  #secret: secret,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Session>);

  @override
  _i9.Future<_i3.Session> getSession({required String? sessionId}) =>
      (super.noSuchMethod(
            Invocation.method(#getSession, [], {#sessionId: sessionId}),
            returnValue: _i9.Future<_i3.Session>.value(
              _FakeSession_9(
                this,
                Invocation.method(#getSession, [], {#sessionId: sessionId}),
              ),
            ),
          )
          as _i9.Future<_i3.Session>);

  @override
  _i9.Future<_i3.Session> updateSession({required String? sessionId}) =>
      (super.noSuchMethod(
            Invocation.method(#updateSession, [], {#sessionId: sessionId}),
            returnValue: _i9.Future<_i3.Session>.value(
              _FakeSession_9(
                this,
                Invocation.method(#updateSession, [], {#sessionId: sessionId}),
              ),
            ),
          )
          as _i9.Future<_i3.Session>);

  @override
  _i9.Future<dynamic> deleteSession({required String? sessionId}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSession, [], {#sessionId: sessionId}),
            returnValue: _i9.Future<dynamic>.value(),
          )
          as _i9.Future<dynamic>);

  @override
  _i9.Future<_i3.User> updateStatus() =>
      (super.noSuchMethod(
            Invocation.method(#updateStatus, []),
            returnValue: _i9.Future<_i3.User>.value(
              _FakeUser_3(this, Invocation.method(#updateStatus, [])),
            ),
          )
          as _i9.Future<_i3.User>);

  @override
  _i9.Future<_i3.Target> createPushTarget({
    required String? targetId,
    required String? identifier,
    String? providerId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createPushTarget, [], {
              #targetId: targetId,
              #identifier: identifier,
              #providerId: providerId,
            }),
            returnValue: _i9.Future<_i3.Target>.value(
              _FakeTarget_15(
                this,
                Invocation.method(#createPushTarget, [], {
                  #targetId: targetId,
                  #identifier: identifier,
                  #providerId: providerId,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Target>);

  @override
  _i9.Future<_i3.Target> updatePushTarget({
    required String? targetId,
    required String? identifier,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePushTarget, [], {
              #targetId: targetId,
              #identifier: identifier,
            }),
            returnValue: _i9.Future<_i3.Target>.value(
              _FakeTarget_15(
                this,
                Invocation.method(#updatePushTarget, [], {
                  #targetId: targetId,
                  #identifier: identifier,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Target>);

  @override
  _i9.Future<dynamic> deletePushTarget({required String? targetId}) =>
      (super.noSuchMethod(
            Invocation.method(#deletePushTarget, [], {#targetId: targetId}),
            returnValue: _i9.Future<dynamic>.value(),
          )
          as _i9.Future<dynamic>);

  @override
  _i9.Future<_i3.Token> createEmailToken({
    required String? userId,
    required String? email,
    bool? phrase,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createEmailToken, [], {
              #userId: userId,
              #email: email,
              #phrase: phrase,
            }),
            returnValue: _i9.Future<_i3.Token>.value(
              _FakeToken_13(
                this,
                Invocation.method(#createEmailToken, [], {
                  #userId: userId,
                  #email: email,
                  #phrase: phrase,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Token>);

  @override
  _i9.Future<_i3.Token> createMagicURLToken({
    required String? userId,
    required String? email,
    String? url,
    bool? phrase,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createMagicURLToken, [], {
              #userId: userId,
              #email: email,
              #url: url,
              #phrase: phrase,
            }),
            returnValue: _i9.Future<_i3.Token>.value(
              _FakeToken_13(
                this,
                Invocation.method(#createMagicURLToken, [], {
                  #userId: userId,
                  #email: email,
                  #url: url,
                  #phrase: phrase,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Token>);

  @override
  _i9.Future<dynamic> createOAuth2Token({
    required _i10.OAuthProvider? provider,
    String? success,
    String? failure,
    List<String>? scopes,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createOAuth2Token, [], {
              #provider: provider,
              #success: success,
              #failure: failure,
              #scopes: scopes,
            }),
            returnValue: _i9.Future<dynamic>.value(),
          )
          as _i9.Future<dynamic>);

  @override
  _i9.Future<_i3.Token> createPhoneToken({
    required String? userId,
    required String? phone,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createPhoneToken, [], {
              #userId: userId,
              #phone: phone,
            }),
            returnValue: _i9.Future<_i3.Token>.value(
              _FakeToken_13(
                this,
                Invocation.method(#createPhoneToken, [], {
                  #userId: userId,
                  #phone: phone,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Token>);

  @override
  _i9.Future<_i3.Token> createVerification({required String? url}) =>
      (super.noSuchMethod(
            Invocation.method(#createVerification, [], {#url: url}),
            returnValue: _i9.Future<_i3.Token>.value(
              _FakeToken_13(
                this,
                Invocation.method(#createVerification, [], {#url: url}),
              ),
            ),
          )
          as _i9.Future<_i3.Token>);

  @override
  _i9.Future<_i3.Token> updateVerification({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateVerification, [], {
              #userId: userId,
              #secret: secret,
            }),
            returnValue: _i9.Future<_i3.Token>.value(
              _FakeToken_13(
                this,
                Invocation.method(#updateVerification, [], {
                  #userId: userId,
                  #secret: secret,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Token>);

  @override
  _i9.Future<_i3.Token> createPhoneVerification() =>
      (super.noSuchMethod(
            Invocation.method(#createPhoneVerification, []),
            returnValue: _i9.Future<_i3.Token>.value(
              _FakeToken_13(
                this,
                Invocation.method(#createPhoneVerification, []),
              ),
            ),
          )
          as _i9.Future<_i3.Token>);

  @override
  _i9.Future<_i3.Token> updatePhoneVerification({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneVerification, [], {
              #userId: userId,
              #secret: secret,
            }),
            returnValue: _i9.Future<_i3.Token>.value(
              _FakeToken_13(
                this,
                Invocation.method(#updatePhoneVerification, [], {
                  #userId: userId,
                  #secret: secret,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Token>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, String> get config =>
      (super.noSuchMethod(
            Invocation.getter(#config),
            returnValue: <String, String>{},
          )
          as Map<String, String>);

  @override
  String get endPoint =>
      (super.noSuchMethod(
            Invocation.getter(#endPoint),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#endPoint),
            ),
          )
          as String);

  @override
  set config(Map<String, String>? _config) => super.noSuchMethod(
    Invocation.setter(#config, _config),
    returnValueForMissingStub: null,
  );

  @override
  _i9.Future<dynamic> webAuth(Uri? url, {String? callbackUrlScheme}) =>
      (super.noSuchMethod(
            Invocation.method(
              #webAuth,
              [url],
              {#callbackUrlScheme: callbackUrlScheme},
            ),
            returnValue: _i9.Future<dynamic>.value(),
          )
          as _i9.Future<dynamic>);

  @override
  _i9.Future<_i4.Response<dynamic>> chunkedUpload({
    required String? path,
    required Map<String, dynamic>? params,
    required String? paramName,
    required String? idParamName,
    required Map<String, String>? headers,
    dynamic Function(_i12.UploadProgress)? onProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#chunkedUpload, [], {
              #path: path,
              #params: params,
              #paramName: paramName,
              #idParamName: idParamName,
              #headers: headers,
              #onProgress: onProgress,
            }),
            returnValue: _i9.Future<_i4.Response<dynamic>>.value(
              _FakeResponse_16<dynamic>(
                this,
                Invocation.method(#chunkedUpload, [], {
                  #path: path,
                  #params: params,
                  #paramName: paramName,
                  #idParamName: idParamName,
                  #headers: headers,
                  #onProgress: onProgress,
                }),
              ),
            ),
          )
          as _i9.Future<_i4.Response<dynamic>>);

  @override
  _i2.Client setSelfSigned({bool? status = true}) =>
      (super.noSuchMethod(
            Invocation.method(#setSelfSigned, [], {#status: status}),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setSelfSigned, [], {#status: status}),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client setEndpoint(String? endPoint) =>
      (super.noSuchMethod(
            Invocation.method(#setEndpoint, [endPoint]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setEndpoint, [endPoint]),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client setEndPointRealtime(String? endPoint) =>
      (super.noSuchMethod(
            Invocation.method(#setEndPointRealtime, [endPoint]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setEndPointRealtime, [endPoint]),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client setProject(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setProject, [value]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setProject, [value]),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client setJWT(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setJWT, [value]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setJWT, [value]),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client setLocale(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setLocale, [value]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setLocale, [value]),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client setSession(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setSession, [value]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setSession, [value]),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client setDevKey(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setDevKey, [value]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setDevKey, [value]),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client addHeader(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#addHeader, [key, value]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#addHeader, [key, value]),
            ),
          )
          as _i2.Client);

  @override
  _i9.Future<String> ping() =>
      (super.noSuchMethod(
            Invocation.method(#ping, []),
            returnValue: _i9.Future<String>.value(
              _i11.dummyValue<String>(this, Invocation.method(#ping, [])),
            ),
          )
          as _i9.Future<String>);

  @override
  _i9.Future<_i4.Response<dynamic>> call(
    _i13.HttpMethod? method, {
    String? path = '',
    Map<String, String>? headers = const {},
    Map<String, dynamic>? params = const {},
    _i13.ResponseType? responseType,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #call,
              [method],
              {
                #path: path,
                #headers: headers,
                #params: params,
                #responseType: responseType,
              },
            ),
            returnValue: _i9.Future<_i4.Response<dynamic>>.value(
              _FakeResponse_16<dynamic>(
                this,
                Invocation.method(
                  #call,
                  [method],
                  {
                    #path: path,
                    #headers: headers,
                    #params: params,
                    #responseType: responseType,
                  },
                ),
              ),
            ),
          )
          as _i9.Future<_i4.Response<dynamic>>);
}

/// A class which mocks [FirebaseMessaging].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseMessaging extends _i1.Mock implements _i14.FirebaseMessaging {
  MockFirebaseMessaging() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_17(this, Invocation.getter(#app)),
          )
          as _i5.FirebaseApp);

  @override
  bool get isAutoInitEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#isAutoInitEnabled),
            returnValue: false,
          )
          as bool);

  @override
  _i9.Stream<String> get onTokenRefresh =>
      (super.noSuchMethod(
            Invocation.getter(#onTokenRefresh),
            returnValue: _i9.Stream<String>.empty(),
          )
          as _i9.Stream<String>);

  @override
  set app(_i5.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i9.Future<_i6.RemoteMessage?> getInitialMessage() =>
      (super.noSuchMethod(
            Invocation.method(#getInitialMessage, []),
            returnValue: _i9.Future<_i6.RemoteMessage?>.value(),
          )
          as _i9.Future<_i6.RemoteMessage?>);

  @override
  _i9.Future<void> deleteToken() =>
      (super.noSuchMethod(
            Invocation.method(#deleteToken, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<String?> getAPNSToken() =>
      (super.noSuchMethod(
            Invocation.method(#getAPNSToken, []),
            returnValue: _i9.Future<String?>.value(),
          )
          as _i9.Future<String?>);

  @override
  _i9.Future<String?> getToken({String? vapidKey}) =>
      (super.noSuchMethod(
            Invocation.method(#getToken, [], {#vapidKey: vapidKey}),
            returnValue: _i9.Future<String?>.value(),
          )
          as _i9.Future<String?>);

  @override
  _i9.Future<bool> isSupported() =>
      (super.noSuchMethod(
            Invocation.method(#isSupported, []),
            returnValue: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<_i6.NotificationSettings> getNotificationSettings() =>
      (super.noSuchMethod(
            Invocation.method(#getNotificationSettings, []),
            returnValue: _i9.Future<_i6.NotificationSettings>.value(
              _FakeNotificationSettings_18(
                this,
                Invocation.method(#getNotificationSettings, []),
              ),
            ),
          )
          as _i9.Future<_i6.NotificationSettings>);

  @override
  _i9.Future<_i6.NotificationSettings> requestPermission({
    bool? alert = true,
    bool? announcement = false,
    bool? badge = true,
    bool? carPlay = false,
    bool? criticalAlert = false,
    bool? provisional = false,
    bool? sound = true,
    bool? providesAppNotificationSettings = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#requestPermission, [], {
              #alert: alert,
              #announcement: announcement,
              #badge: badge,
              #carPlay: carPlay,
              #criticalAlert: criticalAlert,
              #provisional: provisional,
              #sound: sound,
              #providesAppNotificationSettings: providesAppNotificationSettings,
            }),
            returnValue: _i9.Future<_i6.NotificationSettings>.value(
              _FakeNotificationSettings_18(
                this,
                Invocation.method(#requestPermission, [], {
                  #alert: alert,
                  #announcement: announcement,
                  #badge: badge,
                  #carPlay: carPlay,
                  #criticalAlert: criticalAlert,
                  #provisional: provisional,
                  #sound: sound,
                  #providesAppNotificationSettings:
                      providesAppNotificationSettings,
                }),
              ),
            ),
          )
          as _i9.Future<_i6.NotificationSettings>);

  @override
  _i9.Future<void> setAutoInitEnabled(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setAutoInitEnabled, [enabled]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> setDeliveryMetricsExportToBigQuery(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setDeliveryMetricsExportToBigQuery, [enabled]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> setForegroundNotificationPresentationOptions({
    bool? alert = false,
    bool? badge = false,
    bool? sound = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #setForegroundNotificationPresentationOptions,
              [],
              {#alert: alert, #badge: badge, #sound: sound},
            ),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> subscribeToTopic(String? topic) =>
      (super.noSuchMethod(
            Invocation.method(#subscribeToTopic, [topic]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> unsubscribeFromTopic(String? topic) =>
      (super.noSuchMethod(
            Invocation.method(#unsubscribeFromTopic, [topic]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);
}

/// A class which mocks [Functions].
///
/// See the documentation for Mockito's code generation for more information.
class MockFunctions extends _i1.Mock implements _i8.Functions {
  MockFunctions() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeClient_0(this, Invocation.getter(#client)),
          )
          as _i2.Client);

  @override
  _i9.Future<_i3.ExecutionList> listExecutions({
    required String? functionId,
    List<String>? queries,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#listExecutions, [], {
              #functionId: functionId,
              #queries: queries,
            }),
            returnValue: _i9.Future<_i3.ExecutionList>.value(
              _FakeExecutionList_19(
                this,
                Invocation.method(#listExecutions, [], {
                  #functionId: functionId,
                  #queries: queries,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.ExecutionList>);

  @override
  _i9.Future<_i3.Execution> createExecution({
    required String? functionId,
    String? body,
    bool? xasync,
    String? path,
    _i10.ExecutionMethod? method,
    Map<dynamic, dynamic>? headers,
    String? scheduledAt,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createExecution, [], {
              #functionId: functionId,
              #body: body,
              #xasync: xasync,
              #path: path,
              #method: method,
              #headers: headers,
              #scheduledAt: scheduledAt,
            }),
            returnValue: _i9.Future<_i3.Execution>.value(
              _FakeExecution_20(
                this,
                Invocation.method(#createExecution, [], {
                  #functionId: functionId,
                  #body: body,
                  #xasync: xasync,
                  #path: path,
                  #method: method,
                  #headers: headers,
                  #scheduledAt: scheduledAt,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Execution>);

  @override
  _i9.Future<_i3.Execution> getExecution({
    required String? functionId,
    required String? executionId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getExecution, [], {
              #functionId: functionId,
              #executionId: executionId,
            }),
            returnValue: _i9.Future<_i3.Execution>.value(
              _FakeExecution_20(
                this,
                Invocation.method(#getExecution, [], {
                  #functionId: functionId,
                  #executionId: executionId,
                }),
              ),
            ),
          )
          as _i9.Future<_i3.Execution>);
}

/// A class which mocks [Realtime].
///
/// See the documentation for Mockito's code generation for more information.
class MockRealtime extends _i1.Mock implements _i15.Realtime {
  @override
  _i2.Client get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeClient_0(this, Invocation.getter(#client)),
            returnValueForMissingStub: _FakeClient_0(
              this,
              Invocation.getter(#client),
            ),
          )
          as _i2.Client);

  @override
  _i7.RealtimeSubscription subscribe(List<String>? channels) =>
      (super.noSuchMethod(
            Invocation.method(#subscribe, [channels]),
            returnValue: _FakeRealtimeSubscription_21(
              this,
              Invocation.method(#subscribe, [channels]),
            ),
            returnValueForMissingStub: _FakeRealtimeSubscription_21(
              this,
              Invocation.method(#subscribe, [channels]),
            ),
          )
          as _i7.RealtimeSubscription);
}
