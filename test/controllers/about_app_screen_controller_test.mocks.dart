// Mocks generated by Mockito 5.4.6 from annotations
// in resonate/test/controllers/about_app_screen_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:ui' as _i4;

import 'package:flutter/services.dart' as _i11;
import 'package:flutter/widgets.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;
import 'package:upgrader/src/upgrade_messages.dart' as _i5;
import 'package:upgrader/src/upgrade_state.dart' as _i3;
import 'package:upgrader/src/upgrade_store_controller.dart' as _i2;
import 'package:upgrader/src/upgrader.dart' as _i6;
import 'package:upgrader/src/upgrader_version_info.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUpgraderStoreController_0 extends _i1.SmartFake
    implements _i2.UpgraderStoreController {
  _FakeUpgraderStoreController_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUpgraderState_1 extends _i1.SmartFake implements _i3.UpgraderState {
  _FakeUpgraderState_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLocale_2 extends _i1.SmartFake implements _i4.Locale {
  _FakeLocale_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUpgraderMessages_3 extends _i1.SmartFake
    implements _i5.UpgraderMessages {
  _FakeUpgraderMessages_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Upgrader].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpgrader extends _i1.Mock implements _i6.Upgrader {
  MockUpgrader() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UpgraderStoreController get storeController =>
      (super.noSuchMethod(
            Invocation.getter(#storeController),
            returnValue: _FakeUpgraderStoreController_0(
              this,
              Invocation.getter(#storeController),
            ),
          )
          as _i2.UpgraderStoreController);

  @override
  _i3.UpgraderState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeUpgraderState_1(this, Invocation.getter(#state)),
          )
          as _i3.UpgraderState);

  @override
  _i7.Stream<_i3.UpgraderState> get stateStream =>
      (super.noSuchMethod(
            Invocation.getter(#stateStream),
            returnValue: _i7.Stream<_i3.UpgraderState>.empty(),
          )
          as _i7.Stream<_i3.UpgraderState>);

  @override
  set storeController(_i2.UpgraderStoreController? _storeController) =>
      super.noSuchMethod(
        Invocation.setter(#storeController, _storeController),
        returnValueForMissingStub: null,
      );

  @override
  set willDisplayUpgrade(_i6.WillDisplayUpgradeCallback? _willDisplayUpgrade) =>
      super.noSuchMethod(
        Invocation.setter(#willDisplayUpgrade, _willDisplayUpgrade),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<bool> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  void updateState(
    _i3.UpgraderState? newState, {
    bool? updateTheVersionInfo = false,
  }) => super.noSuchMethod(
    Invocation.method(
      #updateState,
      [newState],
      {#updateTheVersionInfo: updateTheVersionInfo},
    ),
    returnValueForMissingStub: null,
  );

  @override
  void updateStream() => super.noSuchMethod(
    Invocation.method(#updateStream, []),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<void> didChangeAppLifecycleState(
    _i4.AppLifecycleState? lifecycleState,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#didChangeAppLifecycleState, [lifecycleState]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i8.UpgraderVersionInfo?> updateVersionInfo() =>
      (super.noSuchMethod(
            Invocation.method(#updateVersionInfo, []),
            returnValue: _i7.Future<_i8.UpgraderVersionInfo?>.value(),
          )
          as _i7.Future<_i8.UpgraderVersionInfo?>);

  @override
  bool verifyInit() =>
      (super.noSuchMethod(
            Invocation.method(#verifyInit, []),
            returnValue: false,
          )
          as bool);

  @override
  String appName() =>
      (super.noSuchMethod(
            Invocation.method(#appName, []),
            returnValue: _i9.dummyValue<String>(
              this,
              Invocation.method(#appName, []),
            ),
          )
          as String);

  @override
  String body(_i5.UpgraderMessages? messages) =>
      (super.noSuchMethod(
            Invocation.method(#body, [messages]),
            returnValue: _i9.dummyValue<String>(
              this,
              Invocation.method(#body, [messages]),
            ),
          )
          as String);

  @override
  bool blocked() =>
      (super.noSuchMethod(Invocation.method(#blocked, []), returnValue: false)
          as bool);

  @override
  bool shouldDisplayUpgrade() =>
      (super.noSuchMethod(
            Invocation.method(#shouldDisplayUpgrade, []),
            returnValue: false,
          )
          as bool);

  @override
  bool belowMinAppVersion() =>
      (super.noSuchMethod(
            Invocation.method(#belowMinAppVersion, []),
            returnValue: false,
          )
          as bool);

  @override
  bool isTooSoon() =>
      (super.noSuchMethod(Invocation.method(#isTooSoon, []), returnValue: false)
          as bool);

  @override
  bool alreadyIgnoredThisVersion() =>
      (super.noSuchMethod(
            Invocation.method(#alreadyIgnoredThisVersion, []),
            returnValue: false,
          )
          as bool);

  @override
  bool isUpdateAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isUpdateAvailable, []),
            returnValue: false,
          )
          as bool);

  @override
  _i4.Locale findLocale({_i10.BuildContext? context}) =>
      (super.noSuchMethod(
            Invocation.method(#findLocale, [], {#context: context}),
            returnValue: _FakeLocale_2(
              this,
              Invocation.method(#findLocale, [], {#context: context}),
            ),
          )
          as _i4.Locale);

  @override
  String? findCountryCode({required _i4.Locale? locale}) =>
      (super.noSuchMethod(
            Invocation.method(#findCountryCode, [], {#locale: locale}),
          )
          as String?);

  @override
  String? findLanguageCode({required _i4.Locale? locale}) =>
      (super.noSuchMethod(
            Invocation.method(#findLanguageCode, [], {#locale: locale}),
          )
          as String?);

  @override
  _i5.UpgraderMessages determineMessages(_i10.BuildContext? context) =>
      (super.noSuchMethod(
            Invocation.method(#determineMessages, [context]),
            returnValue: _FakeUpgraderMessages_3(
              this,
              Invocation.method(#determineMessages, [context]),
            ),
          )
          as _i5.UpgraderMessages);

  @override
  _i7.Future<bool> saveIgnored() =>
      (super.noSuchMethod(
            Invocation.method(#saveIgnored, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> saveLastAlerted() =>
      (super.noSuchMethod(
            Invocation.method(#saveLastAlerted, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> getSavedPrefs() =>
      (super.noSuchMethod(
            Invocation.method(#getSavedPrefs, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<void> sendUserToAppStore() =>
      (super.noSuchMethod(
            Invocation.method(#sendUserToAppStore, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<bool> didPopRoute() =>
      (super.noSuchMethod(
            Invocation.method(#didPopRoute, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  bool handleStartBackGesture(_i11.PredictiveBackEvent? backEvent) =>
      (super.noSuchMethod(
            Invocation.method(#handleStartBackGesture, [backEvent]),
            returnValue: false,
          )
          as bool);

  @override
  void handleUpdateBackGestureProgress(_i11.PredictiveBackEvent? backEvent) =>
      super.noSuchMethod(
        Invocation.method(#handleUpdateBackGestureProgress, [backEvent]),
        returnValueForMissingStub: null,
      );

  @override
  void handleCommitBackGesture() => super.noSuchMethod(
    Invocation.method(#handleCommitBackGesture, []),
    returnValueForMissingStub: null,
  );

  @override
  void handleCancelBackGesture() => super.noSuchMethod(
    Invocation.method(#handleCancelBackGesture, []),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<bool> didPushRoute(String? route) =>
      (super.noSuchMethod(
            Invocation.method(#didPushRoute, [route]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<bool> didPushRouteInformation(
    _i10.RouteInformation? routeInformation,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#didPushRouteInformation, [routeInformation]),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  void didChangeMetrics() => super.noSuchMethod(
    Invocation.method(#didChangeMetrics, []),
    returnValueForMissingStub: null,
  );

  @override
  void didChangeTextScaleFactor() => super.noSuchMethod(
    Invocation.method(#didChangeTextScaleFactor, []),
    returnValueForMissingStub: null,
  );

  @override
  void didChangePlatformBrightness() => super.noSuchMethod(
    Invocation.method(#didChangePlatformBrightness, []),
    returnValueForMissingStub: null,
  );

  @override
  void didChangeLocales(List<_i4.Locale>? locales) => super.noSuchMethod(
    Invocation.method(#didChangeLocales, [locales]),
    returnValueForMissingStub: null,
  );

  @override
  void didChangeViewFocus(_i4.ViewFocusEvent? event) => super.noSuchMethod(
    Invocation.method(#didChangeViewFocus, [event]),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<_i4.AppExitResponse> didRequestAppExit() =>
      (super.noSuchMethod(
            Invocation.method(#didRequestAppExit, []),
            returnValue: _i7.Future<_i4.AppExitResponse>.value(
              _i4.AppExitResponse.exit,
            ),
          )
          as _i7.Future<_i4.AppExitResponse>);

  @override
  void didHaveMemoryPressure() => super.noSuchMethod(
    Invocation.method(#didHaveMemoryPressure, []),
    returnValueForMissingStub: null,
  );

  @override
  void didChangeAccessibilityFeatures() => super.noSuchMethod(
    Invocation.method(#didChangeAccessibilityFeatures, []),
    returnValueForMissingStub: null,
  );
}
